{"ast":null,"code":"var _jsxFileName = \"/Users/pakyutom/Projects/fullstackOpen/full-stack-open-2023/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nconst Content = props => {\n  const content = props.content.map((x, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: x.name\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 48\n  }, this));\n  console.log(content);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: content\n  }, void 0, false);\n};\n_c2 = Content;\nconst Total = props => {\n  let {\n    parts\n  } = props;\n  let total = 0;\n  for (const item in parts) {\n    total += parts[item].exercise;\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises: \", total, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Total;\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercise: 10\n    }, {\n      name: 'Using props to pass data',\n      exercise: 7\n    }, {\n      name: 'State of a component',\n      exercise: 14\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      content: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["Header","props","_jsxDEV","children","course","fileName","_jsxFileName","lineNumber","columnNumber","_c","Content","content","map","x","index","name","console","log","_Fragment","_c2","Total","parts","total","item","exercise","_c3","App","_c4","$RefreshReg$"],"sources":["/Users/pakyutom/Projects/fullstackOpen/full-stack-open-2023/part1/src/App.js"],"sourcesContent":["const Header = (props) => {\n  return (\n    <h1>{props.course}</h1>\n  )\n}\n\nconst Content = (props) => {\n  const content = props.content.map((x,index)=><p key={index}>{x.name}</p>)\n  console.log(content)\n  return(\n    <>\n      {content}\n    </>\n  )\n}\n\nconst Total = (props) => {\n  let {parts} = props\n  let total = 0\n  for (const item in parts){\n   total += (parts[item].exercise)\n  }\n  return(\n    <p>Number of exercises: {total} </p>\n  )\n}\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development', \n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercise: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercise: 7\n      },\n      {\n        name: 'State of a component',\n        exercise: 14\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <Header course={course.name}/>\n      <Content content={course.parts}/>\n      <Total parts={course.parts}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;;AAAA,MAAMA,MAAM,GAAIC,KAAK,IAAK;EACxB,oBACEC,OAAA;IAAAC,QAAA,EAAKF,KAAK,CAACG;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE3B,CAAC;AAAAC,EAAA,GAJKT,MAAM;AAMZ,MAAMU,OAAO,GAAIT,KAAK,IAAK;EACzB,MAAMU,OAAO,GAAGV,KAAK,CAACU,OAAO,CAACC,GAAG,CAAC,CAACC,CAAC,EAACC,KAAK,kBAAGZ,OAAA;IAAAC,QAAA,EAAgBU,CAAC,CAACE;EAAI,GAAdD,KAAK;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa,CAAC,CAAC;EACzEQ,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EACpB,oBACET,OAAA,CAAAgB,SAAA;IAAAf,QAAA,EACGQ;EAAO,gBACR,CAAC;AAEP,CAAC;AAAAQ,GAAA,GARKT,OAAO;AAUb,MAAMU,KAAK,GAAInB,KAAK,IAAK;EACvB,IAAI;IAACoB;EAAK,CAAC,GAAGpB,KAAK;EACnB,IAAIqB,KAAK,GAAG,CAAC;EACb,KAAK,MAAMC,IAAI,IAAIF,KAAK,EAAC;IACxBC,KAAK,IAAKD,KAAK,CAACE,IAAI,CAAC,CAACC,QAAS;EAChC;EACA,oBACEtB,OAAA;IAAAC,QAAA,GAAG,uBAAqB,EAACmB,KAAK,EAAC,GAAC;EAAA;IAAAjB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAExC,CAAC;AAAAiB,GAAA,GATKL,KAAK;AAWX,MAAMM,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMtB,MAAM,GAAG;IACbW,IAAI,EAAE,oCAAoC;IAC1CM,KAAK,EAAE,CACL;MACEN,IAAI,EAAE,uBAAuB;MAC7BS,QAAQ,EAAE;IACZ,CAAC,EACD;MACET,IAAI,EAAE,0BAA0B;MAChCS,QAAQ,EAAE;IACZ,CAAC,EACD;MACET,IAAI,EAAE,sBAAsB;MAC5BS,QAAQ,EAAE;IACZ,CAAC;EAEL,CAAC;EAED,oBACEtB,OAAA;IAAAC,QAAA,gBACED,OAAA,CAACF,MAAM;MAACI,MAAM,EAAEA,MAAM,CAACW;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9BN,OAAA,CAACQ,OAAO;MAACC,OAAO,EAAEP,MAAM,CAACiB;IAAM;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjCN,OAAA,CAACkB,KAAK;MAACC,KAAK,EAAEjB,MAAM,CAACiB;IAAM;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAAAmB,GAAA,GA1BKD,GAAG;AA4BT,eAAeA,GAAG;AAAA,IAAAjB,EAAA,EAAAU,GAAA,EAAAM,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAT,GAAA;AAAAS,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}